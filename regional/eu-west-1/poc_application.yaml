AWSTemplateFormatVersion: 2010-09-09
Description: |
  Launches the Solutions Architect POC application in the eu-west-1 region
Parameters:
  AutoScalingGroupSize:
    Description: Enter the desired initial number of instances in the application autoscaling group
    Type: Number
  AutoScalingImageId:
    Description: Enter the AMI to launch application instances with
    Type: AWS::EC2::Image::Id
  AutoScalingInstanceType:
    AllowedPattern: '^\p{Ll}+\d+\.\d*\p{Ll}+$'
    Description: Enter the EC2 instance class to launch instances with
    Type: String
  HTTPAutoScalingApplicationTemplatePath:
    AllowedPattern: '^[^\/].+$'
    Description: Enter the path to the base HTTP autoscaling application template, without leading slash
    Type: String
  NATGatewayTemplatePath:
    AllowedPattern: '^[^\/].+$'
    Description: Enter the path to the base NAT gateway template, without leading slash
    Type: String
  SubnetTemplatePath:
    AllowedPattern: '^[^\/].+$'
    Description: Enter the path to the base subnet template, without leading slash
    Type: String
  TemplatesBucket:
    AllowedPattern: '^[\p{Ll}\d][-_\.\pL\d]+$'
    Description: Enter the name of the S3 bucket where templates are stored
    MaxLength: 63
    MinLength: 3
    Type: String
  VPCName:
    Description: Enter a name for the new VPC
    Type: String
  VPCTemplatePath:
    AllowedPattern: '^[^\/].+$'
    Description: Enter the path to the base VPC template, without leading slash
    Type: String
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: CloudFormation Templates
      Parameters:
        - TemplatesBucket
        - HTTPAutoScalingApplicationTemplatePath
        - NATGatewayTemplatePath
        - SubnetTemplatePath
        - VPCTemplatePath
    - Label:
        default: VPC Parameters
      Parameters:
        - VPCName
    - Label:
        default: AutoScaling Parameters
      Parameters:
        - AutoScalingGroupSize
        - AutoScalingImageId
        - AutoScalingInstanceType
    ParameterLabels:
      AutoScalingGroupSize:
        default: Initial Group Size
      AutoScalingImageId:
        default: AMI ID
      AutoScalingInstanceType:
        default: Instance Type
      HTTPAutoScalingApplicationTemplatePath:
        default: HTTP AutoScaling Application Template
      NATGatewayTemplatePath:
        default: NAT Gateway Template
      SubnetTemplatePath:
        default: Subnet Template
      TemplatesBucket:
        default: S3 Bucket
      VPCName:
        default: VPC Name
      VPCTemplatePath:
        default: VPC Template
Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CidrBlock: 10.0.0.0/16
        CreateInternetGateway: yes
        VPCName: !Ref VPCName
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/${VPCTemplatePath}
  PublicSubnet251a:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AvailabilityZone: eu-west-1a
        CidrBlock: 10.0.251.0/24
        PublicSubnet: yes
        RouteTableId: !GetAtt VPCStack.Outputs.PublicRouteTable
        VpcId: !GetAtt VPCStack.Outputs.VpcId
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/${SubnetTemplatePath}
  PublicSubnet252b:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AvailabilityZone: eu-west-1b
        CidrBlock: 10.0.252.0/24
        PublicSubnet: yes
        RouteTableId: !GetAtt VPCStack.Outputs.PublicRouteTable
        VpcId: !GetAtt VPCStack.Outputs.VpcId
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/${SubnetTemplatePath}
  PublicSubnet253c:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AvailabilityZone: eu-west-1c
        CidrBlock: 10.0.253.0/24
        PublicSubnet: yes
        RouteTableId: !GetAtt VPCStack.Outputs.PublicRouteTable
        VpcId: !GetAtt VPCStack.Outputs.VpcId
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/${SubnetTemplatePath}
  NATGatewayA:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        SubnetId: !GetAtt PublicSubnet251a.Outputs.SubnetId
        VpcId: !GetAtt VPCStack.Outputs.VpcId
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/${NATGatewayTemplatePath}
  NATGatewayB:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        SubnetId: !GetAtt PublicSubnet252b.Outputs.SubnetId
        VpcId: !GetAtt VPCStack.Outputs.VpcId
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/${NATGatewayTemplatePath}
  NATGatewayC:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        SubnetId: !GetAtt PublicSubnet253c.Outputs.SubnetId
        VpcId: !GetAtt VPCStack.Outputs.VpcId
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/${NATGatewayTemplatePath}
  ApplicationSubnet101a:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AvailabilityZone: eu-west-1a
        CidrBlock: 10.0.101.0/24
        PublicSubnet: no
        RouteTableId: !GetAtt NATGatewayA.Outputs.RouteTableId
        VpcId: !GetAtt VPCStack.Outputs.VpcId
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/${SubnetTemplatePath}
  ApplicationSubnet102b:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AvailabilityZone: eu-west-1b
        CidrBlock: 10.0.102.0/24
        PublicSubnet: no
        RouteTableId: !GetAtt NATGatewayB.Outputs.RouteTableId
        VpcId: !GetAtt VPCStack.Outputs.VpcId
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/${SubnetTemplatePath}
  ApplicationSubnet103c:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AvailabilityZone: eu-west-1c
        CidrBlock: 10.0.103.0/24
        PublicSubnet: no
        RouteTableId: !GetAtt NATGatewayC.Outputs.RouteTableId
        VpcId: !GetAtt VPCStack.Outputs.VpcId
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/${SubnetTemplatePath}
  POCApplication:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        ApplicationName: !Ref AWS::StackName
        AppSubnets: !Join
          - ','
          - - !GetAtt ApplicationSubnet101a.Outputs.SubnetId
            - !GetAtt ApplicationSubnet102b.Outputs.SubnetId
            - !GetAtt ApplicationSubnet103c.Outputs.SubnetId
        ELBSubnets: !Join
          - ','
          - - !GetAtt PublicSubnet251a.Outputs.SubnetId
            - !GetAtt PublicSubnet252b.Outputs.SubnetId
            - !GetAtt PublicSubnet253c.Outputs.SubnetId
        ExternalApplication: yes
        GroupSize: !Ref AutoScalingGroupSize
        HealthCheckPath: /demo.html
        HealthCheckPort: 80
        ImageId: !Ref AutoScalingImageId
        InstanceType: !Ref AutoScalingInstanceType
        TrafficPort: 80
        UserData:
          Fn::Base64: |
            '#!/bin/bash'

            'yum update -y'
            'yum install -y httpd24'
            'service httpd start'
            'chkconfig httpd on'
            'groupadd www'
            'usermod -a -G www ec2-user'
            'chown -R root:www /var/www'
            'chmod 2775 /var/www'
            'find /var/www -type d -exec chmod 2775 {} +'
            'find /var/www -type f -exec chmod 0664 {} +'
        VpcId: !GetAtt VPCStack.Outputs.VpcId
      TemplateURL: !Sub https://s3.amazonaws.com/${TemplatesBucket}/${HTTPAutoScalingApplicationTemplatePath}
